import tcod as libtcodfrom gameclass import *import interface as iimport aifrom objects import Object,Fighterimport main_functions as mfimport enchantments as enfrom image_gestor import *import randomfrom audio import PlaySound    def d(maxi=100):    return random.randint(1,maxi)class Register(type):    def __new__(mcs, name, bases, dict):        cls = type.__new__(mcs, name, bases, dict)        cls.ALL.append(cls)        return clsclass Monster(Fighter):    ALL=[]        __metaclass__=Register    ai=1    align = 'enemy'    speed=4            last_enemy_pos= None    special_attack=None    ratio_special_attack=8        def __init__(self):        super(Monster, self).__init__()        if self.icon=='?':            self.icon=self.name[0]                self.hp=self.maxhp    def die(self):                i.s(self.name+' dies!')                PlaySound('monster_bite')##            global DB##            DB.inv.remove(self)                            DB.p.getexp(self.level)                                                if mf.d()<50:                        mf.put_in_tile(mf.generateitem(self.x,self.y),self.x,self.y)                              mf.remove_from_tile(self)                self.afterdeath()    def afterdeath(self):        pass        def retEye(self):        return iInvMonsterclass Rat(Monster):#'rat',libtcod.grey,5,3,2)    image = iRat    name="rat"        color=libtcod.green    defense=5    maxhp=2    damage=2    hit=0    level=1                class GiantRat(Monster):#'rat',libtcod.grey,5,3,2)    name="giant rat"    icon='R'    image = iGiantRat    color=libtcod.green    defense=5    maxhp=4    damage=4    hit=0    level=2class Lizard(Monster):#'rat',libtcod.grey,5,3,2)    name="lizard"    image=iLizard    color=libtcod.green    defense=5    maxhp=1    damage=2    hit=0    level=1class Slug(Monster):    name='slug'    image=LI('monsters/slug',1)    color=libtcod.dark_green    speed=12    hp=8    level=2    def meleeresponse(self,tar):        global DB        i.s('You cut the slug in two! but that only makes things worse!')        PlaySound("slug")        z=Slug()        x,y=mf.get_closest_free_tile(self.x,self.y)        mf.put_in_tile(z,x,y)        z.hp=self.hp        i.showhit(self,None,LI('special/explo',1))            class Zombie(Monster):    name='zombie'    image=iZombie    color=libtcod.dark_green    speed=10    ratio_special_attack=10    level=2    def special_attack(self,tar):        global DB        PlaySound('zombie')        i.s('Another zombie appears from the ground!')        z=Zombie()        x,y=mf.get_closest_free_tile(self.x,self.y)        mf.put_in_tile(z,x,y)class Skeleton(Monster):#'rat',libtcod.grey,5,3,2)    name="skeleton"    color=libtcod.white    defense=10    image=iSkeleton    maxhp=6    damage=4    hit=0    level=2    resis=1class Guard(Monster):    name='guard'    color=libtcod.blue    defense=12    maxhp=6    damage=6    level=2    image=iGuard    resis=3class DungeonMaster(Monster):    name='dungeon master'    icon='M'    defense=12    maxhp=8    damage=6    resis=2    image=iDungMaster    hit=2    level=3    def special_attack(self,tar):        i.s(self.name+' throws a net! ')        en.Paralyzed().getEnchantment(tar)class Archer(Monster):    name='archer'    color=libtcod.green    defense = 10    image=iArcher    maxhp=8    damage=4    hit=0    level=2    ratio_special_attack=1    def special_attack(self,tar):        i.s(self.name+' shoots an arrow!')        PlaySound("throw")        if tar.defense > d(20)+2:            return        else:            tar.receivedmg(d(4))            PlaySound("hit")class Thief(Monster):    name = 'thief'    defense = 10    image = LI('monsters/thief',1)    maxhp=5    hit=5    damage=1    level=4    speed=4    def success_attack(self,tar):        pri=[]        for el in tar.inv:            if el.isEquipped==0: pri.append(el)        if len(pri)==0:return        stealed = random.choice(pri)        i.s(self.name+' steals your '+stealed.name+'!')        tar.inv.remove(stealed)        x,y=mf.free_tile_away_from((self.x,self.y))        mf.remove_from_tile(self)        mf.put_in_tile(self,x,y)        i.s(self.name+' disappears!')class Sorceress(Monster):    name = 'sorceress'    defense = 13    image=iSorceress    maxhp=8    hit=3    damage=1    level=2        def success_attack(self,tar):                    i.s(self.name+' seduces '+tar.name+'!')            try:tar.GetItemOnSlot('right hand').on_unequip(tar)            except:pass            try:tar.GetItemOnSlot('body').on_unequip(tar)            except:pass            try:tar.updateimage()            except:passclass InvisibleShape(Monster):    name = 'Invisible Shape'    defense = 12    image = LI('monsters/shade',1)    maxhp=12    hit=0    damage=5    level=3    ratio_special_attack=8        def special_attack(self,tar):                    #i.s("You feel a strange presence")            PlaySound("monster_laugh")            class AcidBeast(Monster):    name = 'acid beast'    defense = 12    image = LI('monsters/acidbeast',1)    maxhp=12    hit=0    damage=5    level=3    speed=7    def meleeresponse(self,tar):                          try:                itm=tar.GetItemOnSlot('right hand')                if itm!=None:                    i.s("The acid beast corrodes your "+itm.name+"!")                    itm.on_unequip(tar,0)                    tar.inv.remove(itm)                                                except:pass                        try:tar.updateimage()            except:pass    class Wizard(Monster):    name='wizard'    image=LI('monsters/wizard',1)    maxhp=15    resis=2    ratio_special_attack=5    level=5    def special_attack(self,tar):        if d()<70:            PlaySound('fire')            i.s(self.name+' throws a fireball!')                    if tar.defense > d(20)+8:                return            else:                            tar.receivedmg(d(8),LI('special/fire_hit',1))        else:            PlaySound('teleport')            i.s(self.name+' teleports '+tar.name+'!')            who=tar            x,y=mf.free_tile_away_from((who.x,who.y))            mf.remove_from_tile(who)            mf.put_in_tile(who,x,y)                        DB.p.computeFov=1    def meleeresponse(self,tar):        #tar.healmana(1)        passclass Vortex(Monster):    name='vortex'    image=LI('monsters/vortex',1)    maxhp=15    resis=2    ratio_special_attack=5    level=5    def special_attack(self,tar):        if d()<70:            PlaySound('thunder')            i.s(self.name+' electrocutes you!')                    if tar.defense > d(20)+8:                return            else:                            tar.receivedmg(d(8),LI('special/electro',1))        else:            PlaySound('teleport')            i.s(self.name+' teleports!')            who=self            x,y=mf.free_tile_away_from((who.x,who.y))            mf.remove_from_tile(who)            mf.put_in_tile(who,x,y)                        DB.p.computeFov=1    def meleeresponse(self,tar):        #tar.healmana(1)        passclass Assassin(Monster):    name='assassin'    color=libtcod.red    image=iAssassin    hit=5    maxhp=5    defense=10    damage=10    level=3    speed=3    ratio_special_attack=10    def special_attack(self,tar):        x,y=mf.get_closest_free_tile(tar.x,tar.y)        mf.remove_from_tile(self)        mf.put_in_tile(self,x,y)        i.s(self.name+' disappears for a moment!')class Priest(Monster):    name='priest'    image=iPriest    color=libtcod.white    defense=10    maxhp=8    hit=0    damage=4    ratio_special_attack=10    level=3    resis=2    def special_attack(self,tar):        i.s(self.name+' curses '+tar.name+'!')        en.Weaken().getEnchantment(tar)class HighPriest(Priest):    name='high priest'    image=iHpriest    icon='P'    maxhp=12    resis=4    ratio_special_attack=5    level=4class Necromancer(Monster):    name='Necromancer'    image=LI('monsters/necromancer',1)    maxhp=15    resis=2    ratio_special_attack=5    level=5    def special_attack(self,tar):        global DB        i.s(self.name+' summons a zombie!')        PlaySound('zombie')        z=Zombie()        x,y=mf.get_closest_free_tile(tar.x,tar.y)        mf.put_in_tile(z,x,y)    class Dragon(Monster):    name='dragon'    image=iDragon    icon='D'    color=libtcod.red    defense=12    maxhp=50    damage=10    hit=5    level=10    resis=5    def special_attack(self,tar):        i.s(self.name+' breathes fire!')        PlaySound('fire')        if tar.defense > d(20)+10:            return        i.s(tar.name+' is burnt!')        i.showhit(tar,None,LI('special/fire_hit',1))        tar.receivedmg(d(10))    def afterdeath(self):        global DB        i.draw_game(DB)        i.menu('After a cruent battle, the dragon lays on your feet. Triumphant you can go back home!')        i.menu('Congratulations! Game is over!')        i.menu('Share this game with your friends and people that you hate!')        DB.p.hp=0############################################################################ ALLIES     def retmonster(x,y,package):    e=mf.getfromreg(package)()    ##    e=Wizard()    e.x=x    e.y=y    return e        