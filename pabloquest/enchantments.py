import interface as iimport tcod as libtcodimport fovimport powers as pfrom audio import PlaySoundclass Enchantment:    turnsleft=3    msgOn=None    msgOff=None    msgTurn=None    back_color=None    turnFunc=None    onFunc=None    offFunc=None    def getEnchantment(self,who):                who.enchantments.append(self)        if self.back_color:            who.back_color=self.back_color        if self.msgOn and fov.fov_check(who.x,who.y):            i.s(who.name+' '+self.msgOn)        if self.onFunc:            self.onFunc(who)            def loseEnchantment(self,who):        who.enchantments.remove(self)        if self.msgOff and fov.fov_check(who.x,who.y):            i.s(who.name+' '+self.msgOff)        if self.back_color:            who.back_color=who.original_black_color        if self.offFunc:            self.offFunc(who)    def execEnchantment(self,who):        if self.turnsleft<1:            self.loseEnchantment(who)            return        self.turnsleft-=1        if self.back_color:            who.back_color=self.back_color        if self.msgTurn and fov.fov_check(who.x,who.y):            i.s(who.name+' '+self.msgTurn)        if self.turnFunc:            self.turnFunc(who)        class RockSkin(Enchantment):    msgOn="'s skin looks like rock!"    msgOff="'s skin turns back to normal!"    turnsleft=200    def onFunc(self,who):                who.defense+=1        who.resis+=3    def offFunc(self,who):                who.defense-=1        who.resis-=3class CatchOnFire(Enchantment):    msgOn='catches on fire!'        back_color=libtcod.light_red    def turnFunc(self,who):        who.receivedmg(1)        class Weaken(Enchantment):    msgOn='looks weak!'    msgOff='looks healthy again!'    turnsleft=200    def onFunc(self,who):        PlaySound('weaken')        who.damage-=2        who.hit-=1        who.defense-=4        who.speed+=1    def offFunc(self,who):        who.damage+=2        who.hit+=1        who.defense+=4        who.speed-=1class Paralyzed(Enchantment):    msgOn='is paralyzed!'    msgOff='can move again!'    turnsleft=100    back_color=libtcod.light_blue    def onFunc(self,who):        who.speed+=7            def offFunc(self,who):                who.speed-=7class Enraged(Enchantment):    msgOn='gets crazy!'    msgOff='is not agitated anymore'    turnsleft = 100    def onFunc(self,who):                        who.hit+=1        who.damage+=2    def offFunc(self,who):                who.hit-=1        who.damage-=2class Get_MonsterEye(Enchantment):    msgOn='You can see strange things!'    msgOff='Your eyes itch!'    turnsleft=800    def onFunc(self,who):        who.powers.append(p.MonsterEye)    def offFunc(self,who):        who.powers.remove(p.MonsterEye)class Get_ItemEye(Enchantment):    msgOn='You can see strange things!'    msgOff='Your eyes itch!'    turnsleft=800    def onFunc(self,who):        who.powers.append(p.ItemEye)    def offFunc(self,who):        who.powers.remove(p.ItemEye)class Get_MapEye(Enchantment):    msgOn='You can see strange things!'    msgOff='Your eyes itch!'    turnsleft=800    def onFunc(self,who):        who.powers.append(p.MapEye)    def offFunc(self,who):        who.powers.remove(p.MapEye)    